{"version":3,"sources":["js/api.js","index.js"],"names":["API_KEY","BASE_URL","ImagesApiServise","constructor","onResolved","onRejected","searchQuery","page","fetchImages","url","fetch","then","onFetch","response","catch","ok","json","status","query","newQuery","refs","imagesApiServise","createMarkup","onError","console","log","err"],"mappings":";;;AAGsC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAHtC,MAAMA,EAAU,qCACVC,EAAW,0BAEF,MAAMC,EACjBC,aAAY,WAAEC,EAAF,WAAcC,IACjBC,KAAAA,YAAc,GACdC,KAAAA,KAAO,EACPH,KAAAA,WAAaA,EACbC,KAAAA,WAAaA,EAGtBG,cACUC,MAAAA,KAASR,gDAAuD,KAAKK,oBAAoB,KAAKC,wBAAwBP,IAErHU,OAAAA,MAAMD,GACRE,KAAK,KAAKC,SACVD,KAAKE,IACGT,KAAAA,WAAWS,KAEnBC,MAAMD,IACER,KAAAA,WAAWQ,KAI5BD,QAAQC,GACAA,GAAAA,EAASE,GACNF,OAAAA,EAASG,OACT,MAAwB,MAApBH,EAASI,OACd,mCAEA,yCAINC,YACO,OAAA,KAAKZ,YAGZY,UAAMC,GACDb,KAAAA,YAAca,GApCW,QAAA,QAAA;;ACiBrC,aApBD,QAAA,oBACA,IAAA,EAAA,EAAA,QAAA,aAmBC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAjBD,MAAMC,EAAO,GAIPC,EAAmB,IAAInB,EAAJ,QAAqB,CAC1CE,WAAYkB,EACZjB,WAAYkB,IAKhB,SAASD,IACLE,QAAQC,IAAI,qBAGhB,SAASF,EAAQG,GACbF,QAAQC,IAAIC,GAPhBL,EAAiBb","file":"src.ba6dd25e.js","sourceRoot":"../src","sourcesContent":["const API_KEY = '22041445-5ed2f4f2b816c2335628bcb5d';\nconst BASE_URL = 'https://pixabay.com/api';\n\nexport default class ImagesApiServise {\n    constructor({ onResolved, onRejected }) {\n        this.searchQuery = '';\n        this.page = 1;\n        this.onResolved = onResolved;\n        this.onRejected = onRejected;\n    }\n\n    fetchImages() {\n        const url = `${BASE_URL}/?image_type=photo&orientation=horizontal&q=${this.searchQuery}&page=${this.page}&per_page=12&key=${API_KEY}`;\n\n        return fetch(url)\n            .then(this.onFetch)\n            .then(response => {\n                this.onResolved(response);\n            })\n            .catch(response => {\n                this.onRejected(response);\n            });\n    }\n\n    onFetch(response) {\n        if (response.ok) {\n        return response.json();\n        } else if (response.status === 404) {\n        throw \"Invalid entry. Please try again.\";\n        } else {\n        throw \"It seems there are some server issues.\";\n        }\n    }\n\n    get query() {\n        return this.searchQuery;\n    }\n\n    set query(newQuery) {\n        this.searchQuery = newQuery;\n    }\n}","import './sass/main.scss';\nimport ImagesApiServise from './js/api';\n\nconst refs = {\n    \n}\n\nconst imagesApiServise = new ImagesApiServise({\n    onResolved: createMarkup,\n    onRejected: onError,\n});\n\nimagesApiServise.fetchImages();\n\nfunction createMarkup() {\n    console.log('Hello, its markup');\n};\n\nfunction onError(err) {\n    console.log(err);\n};\n"]}